export const MONAD_CHAIN_ID = 10143; // Monad testnet chain ID
export const MONAD_RPC_URL = "https://testnet-rpc.monad.xyz";

export const CONTRACT_ADDRESS = "0x24892b4F1e3d2F416f269623D3fbb5aD82eae87E"; // Your actual contract address
export const SPC_TOKEN_ADDRESS = "0x27434C462E517aa89270dF4308Ca601612a09Cf0"; // Your actual SPC token address

export const STAKING_PLANS = {
	"0": {
		id: "0",
		name: "Flexible",
		duration: "No Lock",
		apy: 5,
		multiplier: 1,
		fee: 5,
		description: "Stake and unstake anytime",
		features: ["No lock period", "2% unstaking fee", "5% APY", "Instant rewards"],
	},
	"30": {
		id: "30",
		name: "30 Days",
		duration: "30 Days",
		apy: 12,
		multiplier: 1.2,
		fee: 3,
		description: "30-day locked staking",
		features: ["30-day lock", "3% unstaking fee", "12% APY", "Higher rewards"],
	},
	"90": {
		id: "90",
		name: "90 Days",
		duration: "90 Days",
		apy: 18,
		multiplier: 1.5,
		fee: 2,
		description: "90-day locked staking",
		features: ["90-day lock", "2% unstaking fee", "18% APY", "Premium rewards"],
	},
	"365": {
		id: "365",
		name: "1 Year",
		duration: "365 Days",
		apy: 25,
		multiplier: 2,
		fee: 0.5,
		description: "1-year locked staking",
		features: [
			"365-day lock",
			"0.5% unstaking fee",
			"25% APY",
			"Maximum rewards",
		],
	},
} as const;

export type StakingPlanId = keyof typeof STAKING_PLANS;

export const STAKING_ABI = [
	{
		type: "constructor",
		inputs: [
			{ name: "_tokenAddress", type: "address", internalType: "address" },
			{ name: "_name", type: "string", internalType: "string" },
			{ name: "_symbol", type: "string", internalType: "string" },
		],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "BPS_DENOM",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "EPOCH_LENGTH",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "FEE_DYNAMIC",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "FEE_FIXED",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "FEE_FIXED_EARLY",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "STOKEN",
		inputs: [],
		outputs: [
			{ name: "", type: "address", internalType: "contract StakingToken" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "TOKEN",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "contract IERC20" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "accRewardPerWeight",
		inputs: [],
		outputs: [{ name: "", type: "uint128", internalType: "uint128" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "accuredFees",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "claim",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "collectFees",
		inputs: [
			{ name: "_to", type: "address", internalType: "address" },
			{ name: "_amount", type: "uint256", internalType: "uint256" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "emergencyWithdraw",
		inputs: [{ name: "_id", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "epochEnd",
		inputs: [],
		outputs: [{ name: "", type: "uint40", internalType: "uint40" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "fixedFeeByDuration",
		inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "fundEpoch",
		inputs: [{ name: "_reward", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "getPosition",
		inputs: [{ name: "_user", type: "address", internalType: "address" }],
		outputs: [
			{
				name: "",
				type: "tuple[]",
				internalType: "struct Staking.Position[]",
				components: [
					{ name: "amount", type: "uint128", internalType: "uint128" },
					{ name: "unlockTime", type: "uint40", internalType: "uint40" },
					{ name: "multiplierBps", type: "uint16", internalType: "uint16" },
					{ name: "duration", type: "uint32", internalType: "uint32" },
					{ name: "active", type: "bool", internalType: "bool" },
					{ name: "plan", type: "uint8", internalType: "enum Staking.Plan" },
				],
			},
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "lastRewardTime",
		inputs: [],
		outputs: [{ name: "", type: "uint40", internalType: "uint40" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "owner",
		inputs: [],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "pause",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "paused",
		inputs: [],
		outputs: [{ name: "", type: "bool", internalType: "bool" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "pendingRewards",
		inputs: [{ name: "_user", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "positionOwner",
		inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		outputs: [{ name: "", type: "address", internalType: "address" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "positions",
		inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		outputs: [
			{ name: "amount", type: "uint128", internalType: "uint128" },
			{ name: "unlockTime", type: "uint40", internalType: "uint40" },
			{ name: "multiplierBps", type: "uint16", internalType: "uint16" },
			{ name: "duration", type: "uint32", internalType: "uint32" },
			{ name: "active", type: "bool", internalType: "bool" },
			{ name: "plan", type: "uint8", internalType: "enum Staking.Plan" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "recycleBps",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "renounceOwnership",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "rewardPerEpoch",
		inputs: [],
		outputs: [{ name: "", type: "uint128", internalType: "uint128" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "setDynamicFee",
		inputs: [{ name: "_fee", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setEpochLength",
		inputs: [{ name: "_length", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setFixedFees",
		inputs: [
			{ name: "_durations", type: "uint256[]", internalType: "uint256[]" },
			{ name: "_feeBps", type: "uint256[]", internalType: "uint256[]" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setRecycleBps",
		inputs: [{ name: "_bps", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "setToken",
		inputs: [{ name: "_newToken", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "stake",
		inputs: [
			{ name: "_amount", type: "uint256", internalType: "uint256" },
			{ name: "_duration", type: "uint256", internalType: "uint256" },
		],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "totalStaked",
		inputs: [],
		outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "totalWeight",
		inputs: [],
		outputs: [{ name: "", type: "uint128", internalType: "uint128" }],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "transferOwnership",
		inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "unpause",
		inputs: [],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "unstake",
		inputs: [{ name: "_id", type: "uint256", internalType: "uint256" }],
		outputs: [],
		stateMutability: "nonpayable",
	},
	{
		type: "function",
		name: "userInfo",
		inputs: [{ name: "", type: "address", internalType: "address" }],
		outputs: [
			{ name: "weight", type: "uint128", internalType: "uint128" },
			{ name: "rewardDebt", type: "uint128", internalType: "uint128" },
		],
		stateMutability: "view",
	},
	{
		type: "function",
		name: "userPositions",
		inputs: [{ name: "_user", type: "address", internalType: "address" }],
		outputs: [{ name: "", type: "uint256[]", internalType: "uint256[]" }],
		stateMutability: "view",
	},
	{
		type: "event",
		name: "DynamicFeeUpdated",
		inputs: [
			{ name: "fee", type: "uint256", indexed: false, internalType: "uint256" },
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "EmergencyWithdraw",
		inputs: [
			{ name: "user", type: "address", indexed: true, internalType: "address" },
			{ name: "id", type: "uint256", indexed: true, internalType: "uint256" },
			{ name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "EpochFunded",
		inputs: [
			{ name: "reward", type: "uint256", indexed: false, internalType: "uint256" },
			{
				name: "epochEnd",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "EpochLengthUpdated",
		inputs: [
			{
				name: "newLength",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "FeesCollected",
		inputs: [
			{ name: "to", type: "address", indexed: false, internalType: "address" },
			{ name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "FixedFeesUpdated",
		inputs: [
			{
				name: "durations",
				type: "uint256[]",
				indexed: false,
				internalType: "uint256[]",
			},
			{
				name: "feeBps",
				type: "uint256[]",
				indexed: false,
				internalType: "uint256[]",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "OwnershipTransferred",
		inputs: [
			{
				name: "previousOwner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
			{
				name: "newOwner",
				type: "address",
				indexed: true,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Paused",
		inputs: [
			{
				name: "account",
				type: "address",
				indexed: false,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Paused",
		inputs: [
			{ name: "status", type: "bool", indexed: false, internalType: "bool" },
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "RecycleBpsChanged",
		inputs: [
			{ name: "newBps", type: "uint256", indexed: false, internalType: "uint256" },
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "RewardClaimed",
		inputs: [
			{ name: "user", type: "address", indexed: true, internalType: "address" },
			{ name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Staked",
		inputs: [
			{ name: "user", type: "address", indexed: true, internalType: "address" },
			{ name: "id", type: "uint256", indexed: true, internalType: "uint256" },
			{ name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
			{
				name: "plan",
				type: "uint8",
				indexed: false,
				internalType: "enum Staking.Plan",
			},
			{
				name: "multiplierBps",
				type: "uint16",
				indexed: false,
				internalType: "uint16",
			},
			{
				name: "unlockTime",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Unpaused",
		inputs: [
			{
				name: "account",
				type: "address",
				indexed: false,
				internalType: "address",
			},
		],
		anonymous: false,
	},
	{
		type: "event",
		name: "Unstaked",
		inputs: [
			{ name: "user", type: "address", indexed: true, internalType: "address" },
			{ name: "id", type: "uint256", indexed: true, internalType: "uint256" },
			{
				name: "returnedAmount",
				type: "uint256",
				indexed: false,
				internalType: "uint256",
			},
			{ name: "fee", type: "uint256", indexed: false, internalType: "uint256" },
		],
		anonymous: false,
	},
	{ type: "error", name: "EnforcedPause", inputs: [] },
	{ type: "error", name: "ExpectedPause", inputs: [] },
	{ type: "error", name: "FeeTooHigh", inputs: [] },
	{ type: "error", name: "FeeTooLow", inputs: [] },
	{ type: "error", name: "InactivePosition", inputs: [] },
	{ type: "error", name: "InsufficientBalance", inputs: [] },
	{ type: "error", name: "InvalidDuration", inputs: [] },
	{ type: "error", name: "InvalidEpochLength", inputs: [] },
	{ type: "error", name: "InvalidID", inputs: [] },
	{ type: "error", name: "MismatchedLength", inputs: [] },
	{ type: "error", name: "NotOwner", inputs: [] },
	{ type: "error", name: "NullAddress", inputs: [] },
	{
		type: "error",
		name: "OwnableInvalidOwner",
		inputs: [{ name: "owner", type: "address", internalType: "address" }],
	},
	{
		type: "error",
		name: "OwnableUnauthorizedAccount",
		inputs: [{ name: "account", type: "address", internalType: "address" }],
	},
	{ type: "error", name: "ReentrancyGuardReentrantCall", inputs: [] },
	{ type: "error", name: "TransferFailed", inputs: [] },
	{ type: "error", name: "WeightOverload", inputs: [] },
	{ type: "error", name: "ZeroAmount", inputs: [] },
] as const;

export const SPC_TOKEN_ABI = [
	{
		inputs: [
			{ internalType: "address", name: "spender", type: "address" },
			{ internalType: "uint256", name: "amount", type: "uint256" },
		],
		name: "approve",
		outputs: [{ internalType: "bool", name: "", type: "bool" }],
		stateMutability: "nonpayable",
		type: "function",
	},
	{
		inputs: [{ internalType: "address", name: "account", type: "address" }],
		name: "balanceOf",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
	{
		inputs: [
			{ internalType: "address", name: "owner", type: "address" },
			{ internalType: "address", name: "spender", type: "address" },
		],
		name: "allowance",
		outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
		stateMutability: "view",
		type: "function",
	},
];
